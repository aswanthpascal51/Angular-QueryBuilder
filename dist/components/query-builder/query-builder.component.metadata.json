[{"__symbolic":"module","version":3,"metadata":{"QueryBuilderComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"query-builder","template":"\n    <div [ngClass]=\"{'alert alert-warning alert-group': !parentData}\">\n\n      <div class=\"form-inline\">\n       <div class=\"switch-field\">\n        <select class=\"form-control input-sm\" [(ngModel)]=\"data.condition\">\n          <option value=\"and\">AND</option>\n          <option value=\"or\">OR</option>\n        </select>\n        <button class=\"btn btn-sm btn-success\" (click)=\"addRule(data)\">\n          <i class=\"glyphicon glyphicon-plus-sign\"></i> Add Condition\n        </button>\n        <button class=\"btn btn-sm btn-success\" (click)=\"addRuleSet(data)\">\n          <i class=\"glyphicon glyphicon-plus-sign\"></i> Add Group\n        </button>\n        <ng-container *ngIf=\"!!parentData\">\n          <button class=\"btn btn-sm btn-danger\" (click)=\"removeRuleSet(data, parentData)\">\n            <span class=\"glyphicon glyphicon-minus-sign\"></span> Remove Group\n          </button>\n        </ng-container>\n       </div>\n      </div>\n      <div class=\"query-tree\">\n        <ng-container *ngFor=\"let item of data.rules\">\n          <ng-container *ngIf=\"{ruleset: !!item.rules, invalid: !config.allowEmptyRuleset && item.rules && item.rules.length === 0} as local\">\n            <div class=\"alert alert-warning alert-group\">\n              <ng-container *ngIf=\"!local.ruleset\">\n                  <select class=\"form-control input-sm builder-field\" [(ngModel)]=\"item.field\" (change)=\"onFieldChange(item)\">\n                    <option *ngFor=\"let field of fieldNames\" [ngValue]=\"field\">\n                      {{config.fields[field].name}}\n                    </option>\n                  </select>\n                  <select class=\"form-control input-sm builder-field\" [(ngModel)]=\"item.operator\">\n                    <option *ngFor=\"let operator of getOperators(item.field)\" [ngValue]=\"operator\">\n                      {{operator}}\n                    </option>\n                  </select>\n                  <ng-container [ngSwitch]=\"getInputType(item.field, item.operator)\">\n                    <input class=\"form-control input-sm builder-field\" [(ngModel)]=\"item.value\" *ngSwitchCase=\"'text'\" type=\"text\">\n                    <input class=\"form-control input-sm builder-field\" [(ngModel)]=\"item.value\" *ngSwitchCase=\"'date'\" type=\"date\">\n                    <input class=\"form-control input-sm builder-field\" [(ngModel)]=\"item.value\" *ngSwitchCase=\"'number'\" type=\"number\">\n                    <select class=\"form-control input-sm builder-field\" [(ngModel)]=\"item.value\" *ngSwitchCase=\"'select'\">\n                      <option *ngFor=\"let opt of getOptions(item.field)\" [ngValue]=\"opt.value\">\n                        {{opt.name}}\n                      </option>\n                    </select>\n                    <ng-container *ngSwitchCase=\"'multiselect'\">\n                      <select class=\"form-control input-sm builder-field\" [(ngModel)]=\"item.value\" style=\"min-width: 200px\" multiple>\n                        <option *ngFor=\"let opt of getOptions(item.field)\" [ngValue]=\"opt.value\">\n                          {{opt.name}}\n                        </option>\n                      </select>\n                    </ng-container>\n                    <input class=\"form-control input-sm builder-field\" [(ngModel)]=\"item.value\" *ngSwitchCase=\"'checkbox'\" type=\"checkbox\">\n                  </ng-container>\n                  <button class=\"btn btn-sm btn-danger\" (click)=\"removeRule(item, data)\">\n                    <span class=\"glyphicon glyphicon-minus-sign\"></span>\n                  </button>\n              </ng-container>\n              <query-builder *ngIf=\"local.ruleset\" [data]=\"item\" [parentData]=\"data\" [config]=\"config\" [typeMap]=\"typeMap\" [operatorMap]=\"operatorMap\"></query-builder>\n              <p class=\"empty-warning\" *ngIf=\"local.invalid\">A ruleset cannot be empty. Please add a rule or remove it all together.</p>        \n            </div>\n          </ng-container>\n        </ng-container>\n      </div>\n    </div>\n  ","styles":["\n    :host{display:block}:host .close-icon{font-style:normal;font-size:12px}:host .switch-field{font-family:\"Lucida Grande\", Tahoma, Verdana, sans-serif;overflow:hidden}:host .float-right{float:right}:host .switch-title{margin-bottom:6px}:host .form-control{display:inline-block;padding:4px 8px;color:#555;background-color:#fff;background-image:none;border:1px solid #ccc;border-radius:4px}:host .switch-field input{position:absolute;clip:rect(0, 0, 0, 0);height:1px;width:1px;border:0;overflow:hidden}:host .switch-field input:checked+label{border:1px solid #619ed7;background:white;color:#3176b3}:host .invalid-ruleset{border:1px solid rgba(179,65,93,0.5) !important;background:rgba(179,65,93,0.1) !important}:host .empty-warning{color:#8d252e;text-align:center}:host .query-tree{list-style:none;margin:4px 0 2px}:host .query-tree .builder-field{max-width:150px}:host .query-tree .query-item{position:relative;padding:4px 6px;margin-top:4px}:host .query-tree .query-item.ruleset{background:rgba(204,204,204,0.2)}:host .query-tree .query-item.ruleset:hover{border:1px solid rgba(97,158,215,0.5);background:rgba(97,158,215,0.1)}:host .query-tree .query-item.rule{background:white}:host .query-tree .query-item::before{top:-5px}:host .query-tree .query-item::after{top:50%}:host .query-tree .query-item::before,:host .query-tree .query-item::after{content:'';left:-12px;width:9px;height:calc(50% + 6px);position:absolute}:host .query-tree .query-item:last-child::after{content:none}\n  "]}]}],"members":{"operatorMap":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"typeMap":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"parentData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"data":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"getOperators":[{"__symbolic":"method"}],"getInputType":[{"__symbolic":"method"}],"getOptions":[{"__symbolic":"method"}],"addRule":[{"__symbolic":"method"}],"removeRule":[{"__symbolic":"method"}],"addRuleSet":[{"__symbolic":"method"}],"removeRuleSet":[{"__symbolic":"method"}],"onFieldChange":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"QueryBuilderComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"query-builder","template":"\n    <div [ngClass]=\"{'alert alert-warning alert-group': !parentData}\">\n\n      <div class=\"form-inline\">\n       <div class=\"switch-field\">\n        <select class=\"form-control input-sm\" [(ngModel)]=\"data.condition\">\n          <option value=\"and\">AND</option>\n          <option value=\"or\">OR</option>\n        </select>\n        <button class=\"btn btn-sm btn-success\" (click)=\"addRule(data)\">\n          <i class=\"glyphicon glyphicon-plus-sign\"></i> Add Condition\n        </button>\n        <button class=\"btn btn-sm btn-success\" (click)=\"addRuleSet(data)\">\n          <i class=\"glyphicon glyphicon-plus-sign\"></i> Add Group\n        </button>\n        <ng-container *ngIf=\"!!parentData\">\n          <button class=\"btn btn-sm btn-danger\" (click)=\"removeRuleSet(data, parentData)\">\n            <span class=\"glyphicon glyphicon-minus-sign\"></span> Remove Group\n          </button>\n        </ng-container>\n       </div>\n      </div>\n      <div class=\"query-tree\">\n        <ng-container *ngFor=\"let item of data.rules\">\n          <ng-container *ngIf=\"{ruleset: !!item.rules, invalid: !config.allowEmptyRuleset && item.rules && item.rules.length === 0} as local\">\n            <div class=\"alert alert-warning alert-group\">\n              <ng-container *ngIf=\"!local.ruleset\">\n                  <select class=\"form-control input-sm builder-field\" [(ngModel)]=\"item.field\" (change)=\"onFieldChange(item)\">\n                    <option *ngFor=\"let field of fieldNames\" [ngValue]=\"field\">\n                      {{config.fields[field].name}}\n                    </option>\n                  </select>\n                  <select class=\"form-control input-sm builder-field\" [(ngModel)]=\"item.operator\">\n                    <option *ngFor=\"let operator of getOperators(item.field)\" [ngValue]=\"operator\">\n                      {{operator}}\n                    </option>\n                  </select>\n                  <ng-container [ngSwitch]=\"getInputType(item.field, item.operator)\">\n                    <input class=\"form-control input-sm builder-field\" [(ngModel)]=\"item.value\" *ngSwitchCase=\"'text'\" type=\"text\">\n                    <input class=\"form-control input-sm builder-field\" [(ngModel)]=\"item.value\" *ngSwitchCase=\"'date'\" type=\"date\">\n                    <input class=\"form-control input-sm builder-field\" [(ngModel)]=\"item.value\" *ngSwitchCase=\"'number'\" type=\"number\">\n                    <select class=\"form-control input-sm builder-field\" [(ngModel)]=\"item.value\" *ngSwitchCase=\"'select'\">\n                      <option *ngFor=\"let opt of getOptions(item.field)\" [ngValue]=\"opt.value\">\n                        {{opt.name}}\n                      </option>\n                    </select>\n                    <ng-container *ngSwitchCase=\"'multiselect'\">\n                      <select class=\"form-control input-sm builder-field\" [(ngModel)]=\"item.value\" style=\"min-width: 200px\" multiple>\n                        <option *ngFor=\"let opt of getOptions(item.field)\" [ngValue]=\"opt.value\">\n                          {{opt.name}}\n                        </option>\n                      </select>\n                    </ng-container>\n                    <input class=\"form-control input-sm builder-field\" [(ngModel)]=\"item.value\" *ngSwitchCase=\"'checkbox'\" type=\"checkbox\">\n                  </ng-container>\n                  <button class=\"btn btn-sm btn-danger\" (click)=\"removeRule(item, data)\">\n                    <span class=\"glyphicon glyphicon-minus-sign\"></span>\n                  </button>\n              </ng-container>\n              <query-builder *ngIf=\"local.ruleset\" [data]=\"item\" [parentData]=\"data\" [config]=\"config\" [typeMap]=\"typeMap\" [operatorMap]=\"operatorMap\"></query-builder>\n              <p class=\"empty-warning\" *ngIf=\"local.invalid\">A ruleset cannot be empty. Please add a rule or remove it all together.</p>        \n            </div>\n          </ng-container>\n        </ng-container>\n      </div>\n    </div>\n  ","styles":["\n    :host{display:block}:host .close-icon{font-style:normal;font-size:12px}:host .switch-field{font-family:\"Lucida Grande\", Tahoma, Verdana, sans-serif;overflow:hidden}:host .float-right{float:right}:host .switch-title{margin-bottom:6px}:host .form-control{display:inline-block;padding:4px 8px;color:#555;background-color:#fff;background-image:none;border:1px solid #ccc;border-radius:4px}:host .switch-field input{position:absolute;clip:rect(0, 0, 0, 0);height:1px;width:1px;border:0;overflow:hidden}:host .switch-field input:checked+label{border:1px solid #619ed7;background:white;color:#3176b3}:host .invalid-ruleset{border:1px solid rgba(179,65,93,0.5) !important;background:rgba(179,65,93,0.1) !important}:host .empty-warning{color:#8d252e;text-align:center}:host .query-tree{list-style:none;margin:4px 0 2px}:host .query-tree .builder-field{max-width:150px}:host .query-tree .query-item{position:relative;padding:4px 6px;margin-top:4px}:host .query-tree .query-item.ruleset{background:rgba(204,204,204,0.2)}:host .query-tree .query-item.ruleset:hover{border:1px solid rgba(97,158,215,0.5);background:rgba(97,158,215,0.1)}:host .query-tree .query-item.rule{background:white}:host .query-tree .query-item::before{top:-5px}:host .query-tree .query-item::after{top:50%}:host .query-tree .query-item::before,:host .query-tree .query-item::after{content:'';left:-12px;width:9px;height:calc(50% + 6px);position:absolute}:host .query-tree .query-item:last-child::after{content:none}\n  "]}]}],"members":{"operatorMap":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"typeMap":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"parentData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"data":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"getOperators":[{"__symbolic":"method"}],"getInputType":[{"__symbolic":"method"}],"getOptions":[{"__symbolic":"method"}],"addRule":[{"__symbolic":"method"}],"removeRule":[{"__symbolic":"method"}],"addRuleSet":[{"__symbolic":"method"}],"removeRuleSet":[{"__symbolic":"method"}],"onFieldChange":[{"__symbolic":"method"}]}}}}]