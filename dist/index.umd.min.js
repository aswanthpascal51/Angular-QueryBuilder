/**
 * angular2-query-builder - A modernized Angular 2+ query builder based on jquery QueryBuilder
 * @version v0.0.2
 * @author Zeb Zhao
 * @link https://github.com/zebzhao/Angular-QueryBuilder#readme
 * @license MIT
 */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("@angular/core"),require("@angular/common"),require("@angular/forms")):"function"==typeof define&&define.amd?define(["@angular/core","@angular/common","@angular/forms"],t):"object"==typeof exports?exports.ticktock=t(require("@angular/core"),require("@angular/common"),require("@angular/forms")):e.ticktock=t(e.ng.core,e.ng.common,e.ng.forms)}("undefined"!=typeof self?self:this,function(e,t,n){return function(e){function t(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var n={};return t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:o})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=2)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}(n(3))},function(t,n){t.exports=e},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(0);t.QueryBuilderComponent=o.QueryBuilderComponent;var r=n(9);t.QueryBuilderModule=r.QueryBuilderModule},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}(n(4))},function(e,t,n){"use strict";var o=this&&this.__decorate||function(e,t,n,o){var r,i=arguments.length,a=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,o);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(a=(i<3?r(a):i>3?r(t,n,a):r(t,n))||a);return i>3&&a&&Object.defineProperty(t,n,a),a},r=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),a=function(){function e(){this.data={condition:"and",rules:[]},this.config={fields:{}},this.defaultEmptyList=[],this.typeMap={string:"text",number:"number",category:"select",date:"date",boolean:"checkbox"},this.operatorMap={string:["=","!=","contains","like"],number:["=","!=",">",">=","<","<="],category:["=","!="],date:["=","!=",">",">=","<","<="],boolean:["="]}}return e.prototype.ngOnInit=function(){},e.prototype.ngOnChanges=function(e){var t=this.config;if("object"!=typeof t)throw new Error("config must be a valid object");this.fieldNames=Object.keys(t.fields),this.operatorsCache={}},e.prototype.getOperators=function(e){if(this.operatorsCache[e])return this.operatorsCache[e];var t=this.defaultEmptyList;this.config.getOperators&&(t=this.config.getOperators(e));var n=this.config.fields[e],o=n.type;return e&&this.operatorMap[o]&&(t=this.operatorMap[o]),n.options&&(t=t.concat(["in","not in"])),n.nullable&&(t=t.concat(["is null","is not null"])),this.operatorsCache[e]=t,t},e.prototype.getInputType=function(e,t){if(this.config.getInputType)return this.config.getInputType(e,t);var n=this.config.fields[e].type;switch(t){case"is null":case"is not null":return null;case"in":case"not in":return"multiselect";default:return this.typeMap[n]}},e.prototype.getOptions=function(e){return this.config.getOptions?this.config.getOptions(e):this.config.fields[e].options||this.defaultEmptyList},e.prototype.addRule=function(e){if(this.config.addRule)return this.config.addRule(e);var t=this.fieldNames[0],n=this.config.fields[t];e.rules=e.rules.concat([{field:t,operator:this.operatorMap[n.type][0]}])},e.prototype.removeRule=function(e,t){this.config.removeRule?this.config.removeRule(e,t):t.rules=t.rules.filter(function(t){return t!==e})},e.prototype.addRuleSet=function(e){this.config.addRuleSet?this.config.addRuleSet(e):e.rules=e.rules.concat([{condition:"and",rules:[]}])},e.prototype.removeRuleSet=function(e,t){this.config.removeRuleSet?this.config.removeRuleSet(e,t):t.rules=t.rules.filter(function(t){return t!==e})},e.prototype.onFieldChange=function(e){delete e.value;var t=this.config.fields[e.field];e.operator=this.operatorMap[t.type][0]},o([i.Input(),r("design:type",Object)],e.prototype,"operatorMap",void 0),o([i.Input(),r("design:type",Object)],e.prototype,"typeMap",void 0),o([i.Input(),r("design:type",Object)],e.prototype,"parentData",void 0),o([i.Input(),r("design:type",Object)],e.prototype,"data",void 0),o([i.Input(),r("design:type",Object)],e.prototype,"config",void 0),e=o([i.Component({selector:"query-builder",template:n(5),styles:[n(6)]}),r("design:paramtypes",[])],e)}();t.QueryBuilderComponent=a},function(e,t){e.exports='<div [ngClass]="{\'alert alert-warning alert-group\': !parentData}">\n\n  <div class="form-inline">\n   <div class="switch-field">\n    <select class="form-control input-sm" [(ngModel)]="data.condition">\n      <option value="and">AND</option>\n      <option value="or">OR</option>\n    </select>\n    <button class="btn btn-sm btn-success" (click)="addRule(data)">\n      <i class="glyphicon glyphicon-plus-sign"></i> Add Condition\n    </button>\n    <button class="btn btn-sm btn-success" (click)="addRuleSet(data)">\n      <i class="glyphicon glyphicon-plus-sign"></i> Add Group\n    </button>\n    <ng-container *ngIf="!!parentData">\n      <button class="btn btn-sm btn-danger" (click)="removeRuleSet(data, parentData)">\n        <span class="glyphicon glyphicon-minus-sign"></span> Remove Group\n      </button>\n    </ng-container>\n   </div>\n  </div>\n  <div class="query-tree">\n    <ng-container *ngFor="let item of data.rules">\n      <ng-container *ngIf="{ruleset: !!item.rules, invalid: !config.allowEmptyRuleset && item.rules && item.rules.length === 0} as local">\n        <div class="alert alert-warning alert-group">\n          <ng-container *ngIf="!local.ruleset">\n              <select class="form-control input-sm builder-field" [(ngModel)]="item.field" (change)="onFieldChange(item)">\n                <option *ngFor="let field of fieldNames" [ngValue]="field">\n                  {{config.fields[field].name}}\n                </option>\n              </select>\n              <select class="form-control input-sm builder-field" [(ngModel)]="item.operator">\n                <option *ngFor="let operator of getOperators(item.field)" [ngValue]="operator">\n                  {{operator}}\n                </option>\n              </select>\n              <ng-container [ngSwitch]="getInputType(item.field, item.operator)">\n                <input class="form-control input-sm builder-field" [(ngModel)]="item.value" *ngSwitchCase="\'text\'" type="text">\n                <input class="form-control input-sm builder-field" [(ngModel)]="item.value" *ngSwitchCase="\'date\'" type="date">\n                <input class="form-control input-sm builder-field" [(ngModel)]="item.value" *ngSwitchCase="\'number\'" type="number">\n                <select class="form-control input-sm builder-field" [(ngModel)]="item.value" *ngSwitchCase="\'select\'">\n                  <option *ngFor="let opt of getOptions(item.field)" [ngValue]="opt.value">\n                    {{opt.name}}\n                  </option>\n                </select>\n                <ng-container *ngSwitchCase="\'multiselect\'">\n                  <select class="form-control input-sm builder-field" [(ngModel)]="item.value" style="min-width: 200px" multiple>\n                    <option *ngFor="let opt of getOptions(item.field)" [ngValue]="opt.value">\n                      {{opt.name}}\n                    </option>\n                  </select>\n                </ng-container>\n                <input class="form-control input-sm builder-field" [(ngModel)]="item.value" *ngSwitchCase="\'checkbox\'" type="checkbox">\n              </ng-container>\n              <button class="btn btn-sm btn-danger" (click)="removeRule(item, data)">\n                <span class="glyphicon glyphicon-minus-sign"></span>\n              </button>\n          </ng-container>\n          <query-builder *ngIf="local.ruleset" [data]="item" [parentData]="data" [config]="config" [typeMap]="typeMap" [operatorMap]="operatorMap"></query-builder>\n          <p class="empty-warning" *ngIf="local.invalid">A ruleset cannot be empty. Please add a rule or remove it all together.</p>        \n        </div>\n      </ng-container>\n    </ng-container>\n  </div>\n</div>\n'},function(e,t,n){var o=n(7);e.exports="string"==typeof o?o:o.toString()},function(e,t,n){t=e.exports=n(8)(void 0),t.push([e.i,":host {\n  display: block; }\n  :host .close-icon {\n    font-style: normal;\n    font-size: 12px; }\n  :host .switch-field {\n    font-family: \"Lucida Grande\", Tahoma, Verdana, sans-serif;\n    overflow: hidden; }\n  :host .float-right {\n    float: right; }\n  :host .switch-title {\n    margin-bottom: 6px; }\n  :host .form-control {\n    display: inline-block;\n    padding: 4px 8px;\n    color: #555;\n    background-color: #fff;\n    background-image: none;\n    border: 1px solid #ccc;\n    border-radius: 4px; }\n  :host .switch-field input {\n    position: absolute;\n    clip: rect(0, 0, 0, 0);\n    height: 1px;\n    width: 1px;\n    border: 0;\n    overflow: hidden; }\n  :host .switch-field input:checked + label {\n    border: 1px solid #619ed7;\n    background: white;\n    color: #3176b3; }\n  :host .invalid-ruleset {\n    border: 1px solid rgba(179, 65, 93, 0.5) !important;\n    background: rgba(179, 65, 93, 0.1) !important; }\n  :host .empty-warning {\n    color: #8d252e;\n    text-align: center; }\n  :host .query-tree {\n    list-style: none;\n    margin: 4px 0 2px; }\n    :host .query-tree .builder-field {\n      max-width: 150px; }\n    :host .query-tree .query-item {\n      position: relative;\n      padding: 4px 6px;\n      margin-top: 4px; }\n      :host .query-tree .query-item.ruleset {\n        background: rgba(204, 204, 204, 0.2); }\n        :host .query-tree .query-item.ruleset:hover {\n          border: 1px solid rgba(97, 158, 215, 0.5);\n          background: rgba(97, 158, 215, 0.1); }\n      :host .query-tree .query-item.rule {\n        background: white; }\n      :host .query-tree .query-item::before {\n        top: -5px; }\n      :host .query-tree .query-item::after {\n        top: 50%; }\n      :host .query-tree .query-item::before, :host .query-tree .query-item::after {\n        content: '';\n        left: -12px;\n        width: 9px;\n        height: calc(50% + 6px);\n        position: absolute; }\n      :host .query-tree .query-item:last-child::after {\n        content: none; }\n",""])},function(e,t){function n(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var i=o(r);return[n].concat(r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"})).concat([i]).join("\n")}return[n].join("\n")}function o(e){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(e))))+" */"}e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var o=n(t,e);return t[2]?"@media "+t[2]+"{"+o+"}":o}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var o={},r=0;r<this.length;r++){var i=this[r][0];"number"==typeof i&&(o[i]=!0)}for(r=0;r<e.length;r++){var a=e[r];"number"==typeof a[0]&&o[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]="("+a[2]+") and ("+n+")"),t.push(a))}},t}},function(e,t,n){"use strict";var o=this&&this.__decorate||function(e,t,n,o){var r,i=arguments.length,a=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,o);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(a=(i<3?r(a):i>3?r(t,n,a):r(t,n))||a);return i>3&&a&&Object.defineProperty(t,n,a),a};Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),i=n(10),a=n(11),l=n(0),s=function(){function e(){}return e=o([r.NgModule({imports:[i.CommonModule,a.FormsModule],declarations:[l.QueryBuilderComponent],exports:[l.QueryBuilderComponent]})],e)}();t.QueryBuilderModule=s},function(e,n){e.exports=t},function(e,t){e.exports=n}])});
//# sourceMappingURL=index.umd.min.js.map